字符串方法：
	1.charAt
			作用
				方法返回字符串中指定位置的字符
			语法
				string string.charAt(index)
			参数
				index
					0 到 字符串长度-1 的一个整数
			返回值
				返回字符串
			*  特殊的，输入 负数 或者 大于等于长度 会输出空字符串""	
				
				
				
	2.charCodeAt
			作用
				返回指定索引处字符的 Unicode 数值
			语法
				number string.charCodeAt(index)
			参数
				index
			返回值
					返回指定索引处字符的 Unicode 数值
		 	*  一个大于等于 0，小于字符串长度的整数。如果不是一个数值，则默认为 0 
					
					
					
	3.indexOf
			作用
				返回指定值在调用该方法的字符串中首次出现的位置
			语法
				number string.indexOf(searchValue [, fromIndex])
			参数
				searchValue
					一个字符串表示被查找的值
				fromIndex
					开始查找的位置，默认值为0
			返回值
				返回数字
				如果存在返回位置，如果不存在返回-1
				
				
				
	4.lastIndexOf
			作用
				返回指定值在调用该方法的字符串中最后出现的位置
			语法
				number string.lastIndexOf(searchValue [, fromIndex])
			参数
				searchValue
					一个字符串表示被查找的值
				fromIndex
					开始查找的位置，默认值为str.length-1
			返回值
				返回数字
				如果存在返回位置，如果不存在返回-1
				
				
				
	5.	slice
			作用
				方法提取字符串中的一部分，并返回这个新的字符串（包含起始位置，不包含结束位置）
			语法
				string string.slice(beginSlice[, endSlice])
			参数
				beginSlice
					起始位置
				endSlice
					结束位置，默认为最后一个字符的位置+1
			返回值
				返回截取后的字符串
				
			不会根据参数大小 交换参数位置
			如果参数中有负值，则处理成从末尾开始数（倒数）	
				
				
	6.split
			作用
				通过一个指定的字符串把原字符串分割成一个数组
			语法
				array string.split([separator] [, limit])
			参数
				separator
					分割符
				limit
					指定最多分割的数量，默认为全部
			返回值
				返回一个数组
				
			当没有分割符的时候，整个字符串将作为一个整体保存到数组中			
				
				
	7.substring
			作用
				截取指定位置之间的字符串
			语法
				string string.substring(indexStart [, indexEnd])
			参数
				indexStart
					截取的起始位置
				indexEnd
					截取的结束位置，默认为最后一个字符的位置+1
			返回值
				返回截取后的字符串
				
			会根据起始位置和结束位置的大小先进行参数位置的变换，再进行截取
			会把负值转换成0
			
			
			
	8.	substr
			作用
				截取指定起始位置和长度的子字符串
			语法
				string string.substr(start [, length])
			参数
				start 
					截取的起始位置
				length
					截取的字符串长度，默认为字符长度
			返回值
				返回截取后的字符串
			
			
			
	9.	toLowerCase
		作用
			 把字符串全部转成小写
		语法
			string string.toLowerCase()
		参数
		返回值
			返回转成小写的字符串
		
		
		
		toUpperCase
		作用
			 把字符串全部转成大写
		语法
			string string.toUpperCase()
		参数
		返回值
			返回转成大写的字符串
		两个方法不会改变原字符串	
			
	10.trim
			作用
				 去掉字符串首尾的全部空格
			语法
				string string.trim()
			参数
			返回值
				返回去除首尾全部空格后的字符串				不会改变原字符串		
			
						
	11.JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式
			一种类似JS中的对象格式的字符串
			
			JSON规则
				数据以{}或者[]作为起始和结束
				'{}'
				'[]'
				每个数据使用  键值对形式  key : value
				key必须使用""包含
				多个值之间使用逗号分隔
				
			JSON操作方法 
				object JSON.parse(JSONString)
					把JSONString转换成JS中对象类型
				
				string JSON.stringify(object)
					把object转成JSON格式的字符串			
				
				
				
数组方法：
	1.arr.push()
				作用
				添加一个或多个元素到数组的末尾
			语法
				number arr.push(element1, ..., elementN)
			参数
				elementN	一个或多个元素
			返回值
				新数组的length

			arr.pop()
				作用
				删除数组最后 一个 元素
			语法
				mixed arr.pop()
			
			返回值
				被删除的那一个元素
			会改变原数组
	
	2.arr.unshift()
			作用
					添加一个或多个元素到数组的头部
			语法
				number arr.unshift(element1, ..., elementN)
			参数
				elementN	一个或多个元素
			返回值
				新数组的length

			
			arr.shift()
				作用
					删除数组第一个元素
			语法
				number arr.shift()
			参数
			返回值
					被删除的那一个元素


	3.arr.forEach()
			作用
					让数组的每一项都执行一次给定的函数
			语法
				array.forEach(callback[, thisArg])
			参数
				callback	在数组每一项上执行的函数，接收三个	参数：
			    	currentValue	当前项的值。
				   	index	当前项的索引（或下标）。
				  	array	数组本身。
				  	

	4.arr.sort()
			作用
					对数组的元素进行排序
			语法
					array arr.sort([compareFunction])
			参数
					compareFunction 可选。用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的诸个字符的Unicode位点进行排序。 
			返回值
					排序后的数组		
			会改变原数组	
					

	5.arr.concat()
			作用
				将传入的数组或非数组值与原数组合并,组成一个新的数组并返回
			语法
				array array.concat(value1, value2, ..., valueN)
			参数
				valueN		需要与原数组合并的数组或非数组值.
			返回值
				合并后的数组
				
			不会修改原数组的内容
			

	6.arr.reverse()
			作用
				颠倒数组中元素的位置
			语法
				array arr.reverse()
			参数
				
			返回值
				颠倒顺序后的数组
				
			会改变原数组的元素顺序
			

	7.arr.join()
			作用
				将数组中的所有元素连接成一个字符串
			语法
				string  arr.join([separator = ','])	
			参数(不传参数默认使用","进行拼接)
				separator
		    		可选，用于指定连接每个数组元素的分隔符。分隔符会被转成字符串类型；如果省略的话，默认为一个逗号。如果 seprator 是一个空字符串，那么数组中的所有元素将被直接连接。 
			返回值
				拼接后的字符串
			不会改变原数组	

	8.arr.slice()
			作用
				截取数组中一部分，并返回这个新的数组。
			语法
				array	arr.slice([begin[，end]])	
			参数
				begin		起始位置
		    	end 		结束位置
			返回值
				截取后的新的数组
				
			包含起始位置，不包含结束位置
			

	9.arr.splice()
			作用
				用新元素替换旧元素，以此修改数组的内容
			语法
				array	array.splice(start, deleteCount[, item1[, item2[, ...]]])	
			参数
				start		起始位置
		    	deleteCount	删除长度
				item		添加的内容
			返回值
				由被删除的元素组成的一个数组
				
			特殊的，想要只添加不删除元素的时候，如果想把a加到第i位后，就要写：arr.splice(i，0，a)
			修改了原数组的内容
			
			
			
			
			
			
			
			
			
Math方法：
	1.Math.ceil
				作用
					 对数进行向上取整（往大取整，-3.4 => -3）
				语法
					number Math.ceil(x)
				参数
					x	一个数字
				返回值
					返回x向上取整后的值.

			Math.floor
				作用
					对数进行向下取整（往小取整，-3.4 => -4）
				语法
					number Math.floor(x)
				参数
					x	一个数字
				返回值
					返回x向下取整后的值.

	2.	Math.round
				作用
					对数进行四舍五入
				语法
					number Math.round(x)
				参数
					x	一个数字
				返回值
					返回x四舍五入后的值.
					
	3.	Math.abs
				作用
					取数的绝对值
				语法
					number Math.abs(x)
				参数
					x	一个数字
				返回值
					返回x的绝对值.			
					
	4.	Math.random
			作用
					返回0-1之间的随机数，不包含1
				语法
					number Math.random()
				返回值
					返回0-1之间的随机数，不包含1.

			
			0 ~ x:(包括0 不包括x)
					Math.random()*x
			
			1 ~ x+1
					Math.random()*x+1
				
			1 ~ y 	Math.random()*(y-1)+1
			0 ~ y-1 Math.random()*(y-1)
			
			x ~ y	Math.random()*(y-x)+x
			0 ~ y-x Math.random()*(y-x)
					
	5.Math其他：
			Math.PI 圆周率				
			Math.pow(3,2) 乘方
			Math.sqrt( 9 ) 开平方		
					
					
							